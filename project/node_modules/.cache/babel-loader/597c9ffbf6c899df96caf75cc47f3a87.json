{"ast":null,"code":"var _jsxFileName = \"/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js\";\nimport _ from 'lodash';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VictoryPie } from \"victory\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderGraph = () => {\n      this.userTasks = this.props.tasks.filter(task => task.userId === this.props.currentUserId); // this.categories = this.userTasks.map(task => task[\"category\"]);\n      // this.numTasks = this.userTasks.length;\n      // this.running = Math.floor(\n      //   (this.userTasks.filter(task => task[\"category\"] === \"Running\").length /\n      //     this.numTasks) *\n      //     100\n      // );\n\n      this.data = [];\n      this.userTasks.forEach(task => {\n        this.data.push(_.pick(task, \"category\", \"duration\"));\n      });\n      this.totalHours = 0;\n      this.userTasks.map(task => this.totalHours += task.duration);\n\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(VictoryPie, {\n          data: [{\n            x: this.categories[0],\n            y: this.running\n          }, {\n            x: this.categories[0],\n            y: this.running\n          }],\n          colorScale: [\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\"],\n          innerRadius: 40,\n          padAngle: 1,\n          height: 225,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Please sign in.\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  createCategoriesArray() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.renderGraph());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TaskGraph);","map":{"version":3,"sources":["/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js"],"names":["_","React","connect","VictoryPie","fetchTasks","TaskGraph","Component","renderGraph","userTasks","props","tasks","filter","task","userId","currentUserId","data","forEach","push","pick","totalHours","map","duration","isSignedIn","x","categories","y","running","componentDidMount","createCategoriesArray","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAOtCC,WAPsC,GAOxB,MAAM;AAClB,WAAKC,SAAL,GAAiB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CACfC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,KAAKJ,KAAL,CAAWK,aADpB,CAAjB,CADkB,CAIlB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAKC,IAAL,GAAY,EAAZ;AAEA,WAAKP,SAAL,CAAeQ,OAAf,CAAwBJ,IAAD,IAAU;AAC/B,aAAKG,IAAL,CAAUE,IAAV,CAAejB,CAAC,CAACkB,IAAF,CAAON,IAAP,EAAa,UAAb,EAAyB,UAAzB,CAAf;AACD,OAFD;AAIA,WAAKO,UAAL,GAAkB,CAAlB;AAEA,WAAKX,SAAL,CAAeY,GAAf,CAAoBR,IAAD,IAAU,KAAKO,UAAL,IAAmBP,IAAI,CAACS,QAArD;;AAEA,UAAI,KAAKZ,KAAL,CAAWa,UAAf,EAA2B;AACzB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AACE,UAAA,IAAI,EAAE,CACJ;AAAEC,YAAAA,CAAC,EAAE,KAAKC,UAAL,CAAgB,CAAhB,CAAL;AAAyBC,YAAAA,CAAC,EAAE,KAAKC;AAAjC,WADI,EAEJ;AAAEH,YAAAA,CAAC,EAAE,KAAKC,UAAL,CAAgB,CAAhB,CAAL;AAAyBC,YAAAA,CAAC,EAAE,KAAKC;AAAjC,WAFI,CADR;AAKE,UAAA,UAAU,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,EAA6B,MAA7B,EAAqC,MAArC,CALd;AAME,UAAA,WAAW,EAAE,EANf;AAOE,UAAA,QAAQ,EAAE,CAPZ;AAQE,UAAA,MAAM,EAAE,GARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAcD,OAfD,MAeO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAL,CADF;AAGD;AACF,KAjDqC;AAAA;;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,KAAL,CAAWL,UAAX;AACD;;AAEDwB,EAAAA,qBAAqB,GAAG,CAAE;;AA8C1BC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKtB,WAAL,EAAN,CAAP;AACD;;AArDqC;;AAwDxC,MAAMuB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLrB,IAAAA,KAAK,EAAEsB,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACrB,KAApB,CADF;AAELI,IAAAA,aAAa,EAAEiB,KAAK,CAACG,IAAN,CAAWrB,MAFrB;AAGLS,IAAAA,UAAU,EAAES,KAAK,CAACG,IAAN,CAAWZ;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAepB,OAAO,CACpB4B,eADoB,EAEpB;AAAE1B,EAAAA;AAAF,CAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["import _ from 'lodash';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VictoryPie } from \"victory\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  createCategoriesArray() {}\n\n  renderGraph = () => {\n    this.userTasks = this.props.tasks.filter(\n      task => task.userId === this.props.currentUserId\n    );\n    // this.categories = this.userTasks.map(task => task[\"category\"]);\n    // this.numTasks = this.userTasks.length;\n    // this.running = Math.floor(\n    //   (this.userTasks.filter(task => task[\"category\"] === \"Running\").length /\n    //     this.numTasks) *\n    //     100\n    // );\n\n    this.data = [];\n\n    this.userTasks.forEach((task) => {\n      this.data.push(_.pick(task, \"category\", \"duration\"));\n    }); \n\n    this.totalHours = 0;\n\n    this.userTasks.map((task) => this.totalHours += task.duration);\n\n    if (this.props.isSignedIn) {\n      return (\n        <div>\n          <VictoryPie\n            data={[\n              { x: this.categories[0], y: this.running },\n              { x: this.categories[0], y: this.running }\n            ]}\n            colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\" ]}\n            innerRadius={40}\n            padAngle={1}\n            height={225}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div><h1>Please sign in.</h1></div>\n      );\n    }\n  };\n\n  render() {\n    return <div>{this.renderGraph()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(TaskGraph);\n"]},"metadata":{},"sourceType":"module"}