{"ast":null,"code":"var _jsxFileName = \"/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // import {\n//   XYPlot,\n//   XAxis,\n//   YAxis,\n//   VerticalGridLines,\n//   LineSeries,\n//   HorizontalGridLines\n// } from \"react-vis\";\n\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderGraph = () => {\n      const userTasks = this.props.tasks.filter(task => task.userId !== this.props.currentUserId);\n      return (//   <div>\n        //     <XYPlot width={300} height={300}>\n        //       <VerticalGridLines />\n        //       <HorizontalGridLines />\n        //       <XAxis />\n        //       <YAxis />\n        //       <LineSeries\n        //         data={[{ x: 1, y: 4 }, { x: 5, y: 2 }, { x: 15, y: 6 }]}\n        //       />\n        //     </XYPlot>\n        //   </div>\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Hi\")\n      );\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.renderGraph());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.UserId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TaskGraph);","map":{"version":3,"sources":["/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js"],"names":["React","connect","fetchTasks","TaskGraph","Component","renderGraph","userTasks","props","tasks","filter","task","userId","currentUserId","componentDidMount","render","mapStateToProps","state","Object","values","auth","UserId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAKtCC,WALsC,GAKxB,MAAM;AAClB,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAChBC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,KAAKJ,KAAL,CAAWK,aADnB,CAAlB;AAIA,aACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAcD,KAxBqC;AAAA;;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWL,UAAX;AACD;;AAuBDY,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKT,WAAL,EAAN,CAAP;AACD;;AA5BqC;;AA+BxC,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,KAAK,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACR,KAApB,CADF;AAELI,IAAAA,aAAa,EAAEI,KAAK,CAACG,IAAN,CAAWC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAenB,OAAO,CACpBc,eADoB,EAEpB;AAAEb,EAAAA;AAAF,CAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n// import {\n//   XYPlot,\n//   XAxis,\n//   YAxis,\n//   VerticalGridLines,\n//   LineSeries,\n//   HorizontalGridLines\n// } from \"react-vis\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  renderGraph = () => {\n    const userTasks = this.props.tasks.filter(\n      task => task.userId !== this.props.currentUserId\n    );\n\n    return (\n    //   <div>\n    //     <XYPlot width={300} height={300}>\n    //       <VerticalGridLines />\n    //       <HorizontalGridLines />\n    //       <XAxis />\n    //       <YAxis />\n    //       <LineSeries\n    //         data={[{ x: 1, y: 4 }, { x: 5, y: 2 }, { x: 15, y: 6 }]}\n    //       />\n    //     </XYPlot>\n    //   </div>\n    <div>Hi</div>\n    );\n  };\n\n  render() {\n    return <div>{this.renderGraph()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.UserId\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(TaskGraph);\n"]},"metadata":{},"sourceType":"module"}