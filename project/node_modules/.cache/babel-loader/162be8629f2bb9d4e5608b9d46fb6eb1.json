{"ast":null,"code":"var _jsxFileName = \"/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js\";\nimport _ from 'lodash';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VictoryPie } from \"victory\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderGraph = () => {\n      this.userTasks = this.props.tasks.filter(task => task.userId === this.props.currentUserId);\n      this.tempData = [];\n      this.userTasks.forEach(task => {\n        this.tempData.push(_.pick(task, \"category\", \"duration\"));\n      });\n      this.data = this.tempData.map(item => {\n        return {\n          x: item.category,\n          y: parseFloat(item.duration)\n        };\n      });\n      this.newData = [];\n\n      for (var i = 0; i < this.data.length - 2; i++) {\n        if (this.data[i].x === this.data[i + 1].x) {\n          console.log(this.data[i], this.data[i + 1]);\n          this.data[i].y += this.data[i + 1].y;\n          console.log(this.data[i]);\n          this.data.pop(this.data[i + 1]);\n        }\n      }\n\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(VictoryPie, {\n          data: this.data,\n          colorScale: [\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\"],\n          innerRadius: 40,\n          padAngle: 1,\n          height: 225,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Please sign in.\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  createCategoriesArray() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderGraph());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TaskGraph);","map":{"version":3,"sources":["/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js"],"names":["_","React","connect","VictoryPie","fetchTasks","TaskGraph","Component","renderGraph","userTasks","props","tasks","filter","task","userId","currentUserId","tempData","forEach","push","pick","data","map","item","x","category","y","parseFloat","duration","newData","i","length","console","log","pop","isSignedIn","componentDidMount","createCategoriesArray","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VictoryPie } from \"victory\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  createCategoriesArray() {}\n\n  renderGraph = () => {\n    this.userTasks = this.props.tasks.filter(\n      task => task.userId === this.props.currentUserId\n    );\n\n\n    this.tempData = [];\n\n    this.userTasks.forEach((task) => {\n      this.tempData.push(_.pick(task, \"category\", \"duration\"));\n    }); \n\n    this.data = this.tempData.map((item) => {\n      return { x: item.category, y: parseFloat(item.duration) };\n    });\n\n    this.newData = [];\n\n    for (var i = 0; i < this.data.length - 2; i++) {\n      if (this.data[i].x === this.data[i + 1].x) {\n        console.log(this.data[i], this.data[i+1]);\n        this.data[i].y += this.data[i + 1].y;\n        console.log(this.data[i]);\n        this.data.pop(this.data[i + 1]);\n      }\n    }\n\n    if (this.props.isSignedIn) {\n      return (\n        <div>\n          <VictoryPie\n            data={this.data}\n            colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\" ]}\n            innerRadius={40}\n            padAngle={1}\n            height={225}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div><h1>Please sign in.</h1></div>\n      );\n    }\n  };\n\n  render() {\n    return <div>{this.renderGraph()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(TaskGraph);\n"]},"metadata":{},"sourceType":"module"}