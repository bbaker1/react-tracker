{"ast":null,"code":"var _jsxFileName = \"/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VictoryPie } from \"victory\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderGraph = () => {\n      const userTasks = this.props.tasks.filter(task => task.userId !== this.props.currentUserId);\n      const categories = userTasks.map(task => task[\"category\"]);\n      const numTasks = userTasks.length;\n      const running = Math.floor(userTasks.filter(task => task[\"category\"] === \"Running\").length / numTasks * 100);\n      console.log(running);\n\n      if (!this.props.tasks) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(VictoryPie, {\n          data: [{\n            x: categories[0],\n            y: running\n          }, {\n            x: categories[1],\n            y: running\n          }, {\n            x: categories[2],\n            y: running\n          }],\n          height: 10,\n          width: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  createCategoriesArray() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.renderGraph());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.UserId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TaskGraph);","map":{"version":3,"sources":["/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js"],"names":["React","connect","VictoryPie","fetchTasks","TaskGraph","Component","renderGraph","userTasks","props","tasks","filter","task","userId","currentUserId","categories","map","numTasks","length","running","Math","floor","console","log","x","y","componentDidMount","createCategoriesArray","render","mapStateToProps","state","Object","values","auth","UserId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAOtCC,WAPsC,GAOxB,MAAM;AAClB,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAChBC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,KAAKJ,KAAL,CAAWK,aADnB,CAAlB;AAIA,YAAMC,UAAU,GAAGP,SAAS,CAACQ,GAAV,CAAcJ,IAAI,IAAIA,IAAI,CAAC,UAAD,CAA1B,CAAnB;AACA,YAAMK,QAAQ,GAAGT,SAAS,CAACU,MAA3B;AACA,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CACbb,SAAS,CAACG,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqB,SAA9C,EAAyDM,MAAzD,GACCD,QADF,GAEE,GAHY,CAAhB;AAKAK,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AAEA,UAAI,CAAC,KAAKV,KAAL,CAAWC,KAAhB,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AACE,UAAA,IAAI,EAAE,CACJ;AAAEc,YAAAA,CAAC,EAAET,UAAU,CAAC,CAAD,CAAf;AAAoBU,YAAAA,CAAC,EAAEN;AAAvB,WADI,EAEJ;AAAEK,YAAAA,CAAC,EAAET,UAAU,CAAC,CAAD,CAAf;AAAoBU,YAAAA,CAAC,EAAEN;AAAvB,WAFI,EAGJ;AAAEK,YAAAA,CAAC,EAAET,UAAU,CAAC,CAAD,CAAf;AAAoBU,YAAAA,CAAC,EAAEN;AAAvB,WAHI,CADR;AAME,UAAA,MAAM,EAAE,EANV;AAOE,UAAA,KAAK,EAAE,EAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAaD;AACF,KAtCqC;AAAA;;AACtCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,KAAL,CAAWL,UAAX;AACD;;AAEDuB,EAAAA,qBAAqB,GAAG,CAAE;;AAmC1BC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKrB,WAAL,EAAN,CAAP;AACD;;AA1CqC;;AA6CxC,MAAMsB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLpB,IAAAA,KAAK,EAAEqB,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACpB,KAApB,CADF;AAELI,IAAAA,aAAa,EAAEgB,KAAK,CAACG,IAAN,CAAWC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAehC,OAAO,CACpB2B,eADoB,EAEpB;AAAEzB,EAAAA;AAAF,CAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VictoryPie } from \"victory\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  createCategoriesArray() {}\n\n  renderGraph = () => {\n    const userTasks = this.props.tasks.filter(\n      task => task.userId !== this.props.currentUserId\n    );\n\n    const categories = userTasks.map(task => task[\"category\"]);\n    const numTasks = userTasks.length;\n    const running = Math.floor(\n      (userTasks.filter(task => task[\"category\"] === \"Running\").length /\n        numTasks) *\n        100\n    );\n    console.log(running);\n\n    if (!this.props.tasks) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <VictoryPie\n            data={[\n              { x: categories[0], y: running },\n              { x: categories[1], y: running },\n              { x: categories[2], y: running }\n            ]}\n            height={10}\n            width={10}\n          />\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return <div>{this.renderGraph()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.UserId\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(TaskGraph);\n"]},"metadata":{},"sourceType":"module"}