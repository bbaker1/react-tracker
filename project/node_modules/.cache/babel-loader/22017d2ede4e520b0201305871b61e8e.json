{"ast":null,"code":"var _jsxFileName = \"/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, LineSeries, HorizontalGridLines } from \"react-vis\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderGraph = () => {\n      const userTasks = this.props.tasks.filter(task => task.userId !== this.props.currentUserId);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        width: 300,\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(VerticalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(HorizontalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        data: [{\n          x: 1,\n          y: 4\n        }, {\n          x: 5,\n          y: 2\n        }, {\n          x: 15,\n          y: 6\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })));\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.renderGraph());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.UserId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TaskGraph);","map":{"version":3,"sources":["/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js"],"names":["React","connect","XYPlot","XAxis","YAxis","VerticalGridLines","LineSeries","HorizontalGridLines","fetchTasks","TaskGraph","Component","renderGraph","userTasks","props","tasks","filter","task","userId","currentUserId","x","y","componentDidMount","render","mapStateToProps","state","Object","values","auth","UserId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,iBAJF,EAKEC,UALF,EAMEC,mBANF,QAOO,WAPP;AAQA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAKtCC,WALsC,GAKxB,MAAM;AAClB,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAChBC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,KAAKJ,KAAL,CAAWK,aADnB,CAAlB;AAIA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,GAAf;AAAoB,QAAA,MAAM,EAAE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAE,CAAC;AAAEC,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE;AAAX,SAAD,EAAiB;AAAED,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE;AAAX,SAAjB,EAAiC;AAAED,UAAAA,CAAC,EAAE,EAAL;AAASC,UAAAA,CAAC,EAAE;AAAZ,SAAjC,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF;AAaD,KAvBqC;AAAA;;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,KAAL,CAAWL,UAAX;AACD;;AAsBDc,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKX,WAAL,EAAN,CAAP;AACD;;AA3BqC;;AA8BxC,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,KAAK,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,KAApB,CADF;AAELI,IAAAA,aAAa,EAAEM,KAAK,CAACG,IAAN,CAAWC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAe3B,OAAO,CACpBsB,eADoB,EAEpB;AAAEf,EAAAA;AAAF,CAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  LineSeries,\n  HorizontalGridLines\n} from \"react-vis\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  renderGraph = () => {\n    const userTasks = this.props.tasks.filter(\n      task => task.userId !== this.props.currentUserId\n    );\n\n    return (\n      <div>\n        <XYPlot width={300} height={300}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineSeries\n            data={[{ x: 1, y: 4 }, { x: 5, y: 2 }, { x: 15, y: 6 }]}\n          />\n        </XYPlot>\n      </div>\n    );\n  };\n\n  render() {\n    return <div>{this.renderGraph()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.UserId\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(TaskGraph);\n"]},"metadata":{},"sourceType":"module"}