{"ast":null,"code":"var _jsxFileName = \"/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js\";\nimport _ from 'lodash';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VictoryPie } from \"victory\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderGraph = () => {\n      this.userTasks = this.props.tasks.filter(task => task.userId === this.props.currentUserId);\n      this.categories = this.userTasks.map(task => task[\"category\"]);\n      this.numTasks = this.userTasks.length;\n      this.running = Math.floor(this.userTasks.filter(task => task[\"category\"] === \"Running\").length / this.numTasks * 100);\n      this.tempData = [];\n      this.userTasks.forEach(task => {\n        this.tempData.push(_.pick(task, \"category\", \"duration\"));\n      });\n      this.data = this.tempData.map(item => {\n        return {\n          x: item.category,\n          y: item.duration\n        };\n      });\n      console.log(this.data);\n      this.totalHours = 0;\n      this.data.forEach(task => {\n        this.totalHours += parseFloat(task.duration);\n      });\n      console.log(this.totalHours);\n\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(VictoryPie, {\n          data: [{\n            x: \"Running\",\n            y: 100\n          }],\n          colorScale: [\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\"],\n          innerRadius: 40,\n          padAngle: 1,\n          height: 225,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Please sign in.\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  createCategoriesArray() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.renderGraph());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TaskGraph);","map":{"version":3,"sources":["/Users/benbaker/react-tracker/project/src/components/Tasks/TaskGraph.js"],"names":["_","React","connect","VictoryPie","fetchTasks","TaskGraph","Component","renderGraph","userTasks","props","tasks","filter","task","userId","currentUserId","categories","map","numTasks","length","running","Math","floor","tempData","forEach","push","pick","data","item","x","category","y","duration","console","log","totalHours","parseFloat","isSignedIn","componentDidMount","createCategoriesArray","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VictoryPie } from \"victory\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskGraph extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  createCategoriesArray() {}\n\n  renderGraph = () => {\n    this.userTasks = this.props.tasks.filter(\n      task => task.userId === this.props.currentUserId\n    );\n    this.categories = this.userTasks.map(task => task[\"category\"]);\n    this.numTasks = this.userTasks.length;\n    this.running = Math.floor(\n      (this.userTasks.filter(task => task[\"category\"] === \"Running\").length /\n        this.numTasks) *\n        100\n    );\n\n    this.tempData = [];\n\n    this.userTasks.forEach((task) => {\n      this.tempData.push(_.pick(task, \"category\", \"duration\"));\n    }); \n\n    this.data = this.tempData.map((item) => {\n      return { x: item.category, y: item.duration };\n    });\n\n    console.log(this.data);\n\n    this.totalHours = 0;\n\n    this.data.forEach((task) => {\n      this.totalHours += parseFloat(task.duration);\n    });\n\n    console.log(this.totalHours);\n\n    if (this.props.isSignedIn) {\n      return (\n        <div>\n          <VictoryPie\n            data={[\n              {x: \"Running\", y: 100}\n            ]}\n            colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\" ]}\n            innerRadius={40}\n            padAngle={1}\n            height={225}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div><h1>Please sign in.</h1></div>\n      );\n    }\n  };\n\n  render() {\n    return <div>{this.renderGraph()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(TaskGraph);\n"]},"metadata":{},"sourceType":"module"}