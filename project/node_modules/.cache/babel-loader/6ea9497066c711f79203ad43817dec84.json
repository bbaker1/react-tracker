{"ast":null,"code":"var _jsxFileName = \"/Users/benbaker/react-tracker/project/src/components/Tasks/TaskList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskList extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  renderList() {\n    const userTasks = this.props.tasks.filter(task => task.userId === this.props.currentUserId);\n    console.log(userTasks);\n    return userTasks.map(task => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: task.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, task.category), React.createElement(Link, {\n        to: \"/tasks/edit/\".concat(task.id),\n        className: \"mini green ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"mini red ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Delete\")), React.createElement(\"i\", {\n        className: \"check icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, task.description), React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, task.duration, \" hour(s)\")));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/tasks/new\",\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Create Task\"));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Tasks\"), React.createElement(\"div\", {\n      className: \"ui relaxed divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.renderList()), this.renderCreate());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    isSignedIn: state.auth.isSignedIn,\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TaskList);","map":{"version":3,"sources":["/Users/benbaker/react-tracker/project/src/components/Tasks/TaskList.js"],"names":["React","connect","Link","fetchTasks","TaskList","Component","componentDidMount","props","renderList","userTasks","tasks","filter","task","userId","currentUserId","console","log","map","id","category","description","duration","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchTasks } from \"../../actions\";\n\nclass TaskList extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  renderList() {\n    const userTasks = this.props.tasks.filter(\n      task => task.userId === this.props.currentUserId\n    );\n    console.log(userTasks);\n    return userTasks.map(task => {\n      return (\n        <div className=\"item\" key={task.id}>\n          <div className=\"right floated content\">\n            <h3>{task.category}</h3>\n            <Link to={`/tasks/edit/${task.id}`} className=\"mini green ui button\">Edit</Link>\n            <Link to=\"/\" className=\"mini red ui button\">Delete</Link>\n          </div>\n          <i className=\"check icon\" />\n          <div className=\"content\">\n            <h4 className=\"header\">{task.description}</h4>\n            <div className=\"description\">{task.duration} hour(s)</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: \"right\" }}>\n          <Link to=\"/tasks/new\" className=\"ui button primary\">\n            Create Task\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Tasks</h2>\n        <div className=\"ui relaxed divided list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    isSignedIn: state.auth.isSignedIn,\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(TaskList);\n"]},"metadata":{},"sourceType":"module"}